{
  "version": 3,
  "sources": ["../../../../src/cli/lib/config.ts"],
  "sourcesContent": ["import { AxiosError } from \"axios\";\nimport chalk from \"chalk\";\nimport equal from \"deep-equal\";\nimport { EOL } from \"os\";\nimport path from \"path\";\nimport {\n  changeSpinner,\n  Context,\n  logError,\n  logFailure,\n  logFinishedStep,\n  logMessage,\n  showSpinner,\n} from \"../../bundler/context.js\";\nimport {\n  Bundle,\n  bundle,\n  bundleAuthConfig,\n  entryPointsByEnvironment,\n} from \"../../bundler/index.js\";\nimport { version } from \"../version.js\";\nimport { dashboardUrlForConfiguredDeployment } from \"../dashboard.js\";\nimport {\n  deprecationCheckWarning,\n  formatSize,\n  functionsDir,\n  getConfiguredDeployment,\n  logAndHandleAxiosError,\n  ErrorData,\n  deploymentClient,\n  loadPackageJson,\n} from \"./utils.js\";\nexport { productionProvisionHost, provisionHost } from \"./utils.js\";\n\n/** Type representing auth configuration. */\nexport interface AuthInfo {\n  // Provider-specific application identifier. Corresponds to the `aud` field in an OIDC token.\n  applicationID: string;\n  // Domain used for authentication. Corresponds to the `iss` field in an OIDC token.\n  domain: string;\n}\n\n/** Type representing Convex project configuration. */\nexport interface ProjectConfig {\n  functions: string;\n  node: {\n    externalPackages: string[];\n  };\n  generateCommonJSApi: boolean;\n  // deprecated\n  project?: string;\n  // deprecated\n  team?: string;\n  // deprecated\n  prodUrl?: string;\n  // deprecated\n  authInfo?: AuthInfo[];\n}\n\ninterface NodeDependency {\n  name: string;\n  version: string;\n}\n\nexport interface Config {\n  projectConfig: ProjectConfig;\n  modules: Bundle[];\n  nodeDependencies: NodeDependency[];\n  schemaId?: string;\n  udfServerVersion?: string;\n  authConfig?: Bundle;\n}\n\nconst DEFAULT_FUNCTIONS_PATH = \"convex/\";\n\n/** Check if object is of AuthInfo type. */\nfunction isAuthInfo(object: any): object is AuthInfo {\n  return (\n    \"applicationID\" in object &&\n    typeof object.applicationID === \"string\" &&\n    \"domain\" in object &&\n    typeof object.domain === \"string\"\n  );\n}\n\nfunction isAuthInfos(object: any): object is AuthInfo[] {\n  return Array.isArray(object) && object.every((item: any) => isAuthInfo(item));\n}\n\n/** Error parsing ProjectConfig representation. */\nclass ParseError extends Error {}\n\n/** Parse object to ProjectConfig. */\nexport async function parseProjectConfig(\n  ctx: Context,\n  obj: any\n): Promise<ProjectConfig> {\n  if (typeof obj !== \"object\") {\n    logError(ctx, \"Expected `convex.json` to contain an object\");\n    return await ctx.crash(1, \"invalid filesystem data\");\n  }\n  if (typeof obj.node === \"undefined\") {\n    obj.node = {\n      externalPackages: [],\n    };\n  } else if (typeof obj.node.externalPackages === \"undefined\") {\n    obj.node.externalPackages = [];\n  } else if (\n    !Array.isArray(obj.node.externalPackages) ||\n    !obj.node.externalPackages.every((item: any) => typeof item === \"string\")\n  ) {\n    logError(\n      ctx,\n      \"Expected `node.externalPackages` in `convex.json` to be an array of strings\"\n    );\n    return await ctx.crash(1, \"invalid filesystem data\");\n  }\n  if (typeof obj.generateCommonJSApi === \"undefined\") {\n    obj.generateCommonJSApi = false;\n  } else if (typeof obj.generateCommonJSApi !== \"boolean\") {\n    logError(\n      ctx,\n      \"Expected `generateCommonJSApi` in `convex.json` to be true or false\"\n    );\n    return await ctx.crash(1, \"invalid filesystem data\");\n  }\n\n  if (typeof obj.functions === \"undefined\") {\n    obj.functions = DEFAULT_FUNCTIONS_PATH;\n  } else if (typeof obj.functions !== \"string\") {\n    logError(ctx, \"Expected `functions` in `convex.json` to be a string\");\n    return await ctx.crash(1, \"invalid filesystem data\");\n  }\n\n  // Allow the `authInfo` key to be omitted, treating it as an empty list of providers.\n  if (obj.authInfo !== undefined) {\n    if (!isAuthInfos(obj.authInfo)) {\n      logError(\n        ctx,\n        \"Expected `authInfo` in `convex.json` to be of type AuthInfo[]\"\n      );\n      return await ctx.crash(1, \"invalid filesystem data\");\n    }\n  }\n\n  return obj;\n}\n\n// Parse a deployment config returned by the backend, picking out\n// the fields we care about.\nfunction parseBackendConfig(obj: any): {\n  functions: string;\n  authInfo?: AuthInfo[];\n} {\n  if (typeof obj !== \"object\") {\n    // Unexpected error\n    // eslint-disable-next-line no-restricted-syntax\n    throw new ParseError(\"Expected an object\");\n  }\n  const { functions, authInfo } = obj;\n  if (typeof functions !== \"string\") {\n    // Unexpected error\n    // eslint-disable-next-line no-restricted-syntax\n    throw new ParseError(\"Expected functions to be a string\");\n  }\n\n  // Allow the `authInfo` key to be omitted\n  if ((authInfo ?? null) !== null && !isAuthInfos(authInfo)) {\n    // Unexpected error\n    // eslint-disable-next-line no-restricted-syntax\n    throw new ParseError(\"Expected authInfo to be type AuthInfo[]\");\n  }\n\n  return {\n    functions,\n    ...((authInfo ?? null) !== null ? { authInfo: authInfo } : {}),\n  };\n}\n\nexport function configName(): string {\n  return \"convex.json\";\n}\n\nexport async function configFilepath(ctx: Context): Promise<string> {\n  const configFn = configName();\n  // We used to allow src/convex.json, but no longer (as of 10/7/2022).\n  // Leave an error message around to help people out. We can remove this\n  // error message after a couple months.\n  const preferredLocation = configFn;\n  const wrongLocation = path.join(\"src\", configFn);\n\n  // Allow either location, but not both.\n  const preferredLocationExists = ctx.fs.exists(preferredLocation);\n  const wrongLocationExists = ctx.fs.exists(wrongLocation);\n  if (preferredLocationExists && wrongLocationExists) {\n    logError(\n      ctx,\n      chalk.red(\n        `Error: both ${preferredLocation} and ${wrongLocation} files exist!`\n      )\n    );\n    logFailure(ctx, `Consolidate these and remove ${wrongLocation}.`);\n    return await ctx.crash(1, \"invalid filesystem data\");\n  }\n  if (!preferredLocationExists && wrongLocationExists) {\n    logFailure(\n      ctx,\n      `Error: Please move ${wrongLocation} to the root of your project`\n    );\n    return await ctx.crash(1, \"invalid filesystem data\");\n  }\n\n  return preferredLocation;\n}\n\nexport async function getFunctionsDirectoryPath(ctx: Context): Promise<string> {\n  const { projectConfig, configPath } = await readProjectConfig(ctx);\n  return functionsDir(configPath, projectConfig);\n}\n\n/** Read configuration from a local `convex.json` file. */\nexport async function readProjectConfig(ctx: Context): Promise<{\n  projectConfig: ProjectConfig;\n  configPath: string;\n}> {\n  if (!ctx.fs.exists(\"convex.json\")) {\n    // create-react-app bans imports from outside of src, so we can just\n    // put the functions directory inside of src/ to work around this issue.\n    const packages = await loadPackageJson(ctx);\n    const isCreateReactApp = \"react-scripts\" in packages;\n    return {\n      projectConfig: {\n        functions: isCreateReactApp\n          ? `src/${DEFAULT_FUNCTIONS_PATH}`\n          : DEFAULT_FUNCTIONS_PATH,\n        node: {\n          externalPackages: [],\n        },\n        generateCommonJSApi: false,\n      },\n      configPath: configName(),\n    };\n  }\n  let projectConfig;\n  const configPath = await configFilepath(ctx);\n  try {\n    projectConfig = await parseProjectConfig(\n      ctx,\n      JSON.parse(ctx.fs.readUtf8File(configPath))\n    );\n  } catch (err) {\n    if (err instanceof ParseError || err instanceof SyntaxError) {\n      logError(ctx, chalk.red(`Error: Parsing \"${configPath}\" failed`));\n      logMessage(ctx, chalk.gray(err.toString()));\n    } else {\n      logFailure(\n        ctx,\n        `Error: Unable to read project config file \"${configPath}\"\\n` +\n          \"  Are you running this command from the root directory of a Convex project? If so, run `npx convex dev` first.\"\n      );\n      if (err instanceof Error) {\n        logError(ctx, chalk.red(err.message));\n      }\n    }\n    return await ctx.crash(1, \"invalid filesystem data\", err);\n  }\n  return {\n    projectConfig,\n    configPath,\n  };\n}\n\nexport async function enforceDeprecatedConfigField(\n  ctx: Context,\n  config: ProjectConfig,\n  field: \"team\" | \"project\" | \"prodUrl\"\n): Promise<string> {\n  const value = config[field];\n  if (typeof value === \"string\") {\n    return value;\n  }\n  const err = new ParseError(`Expected ${field} to be a string`);\n  logFailure(ctx, `Error: Parsing convex.json failed`);\n  logMessage(ctx, chalk.gray(err.toString()));\n  return await ctx.crash(1, \"invalid filesystem data\", err);\n}\n\n/**\n * Given an {@link ProjectConfig}, add in the bundled modules to produce the\n * complete config.\n */\nexport async function configFromProjectConfig(\n  ctx: Context,\n  projectConfig: ProjectConfig,\n  configPath: string,\n  verbose: boolean\n): Promise<{\n  config: Config;\n  bundledModuleInfos: BundledModuleInfo[];\n}> {\n  const baseDir = functionsDir(configPath, projectConfig);\n  // We bundle functions entry points separately since they execute on different\n  // platforms.\n  const entryPoints = await entryPointsByEnvironment(ctx, baseDir, verbose);\n  // es-build prints errors to console which would clobber\n  // our spinner.\n  if (verbose) {\n    showSpinner(ctx, \"Bundling modules for Convex's runtime...\");\n  }\n  const convexResult = await bundle(\n    ctx,\n    baseDir,\n    entryPoints.isolate,\n    true,\n    \"browser\"\n  );\n  if (verbose) {\n    logMessage(\n      ctx,\n      \"Convex's runtime modules: \",\n      convexResult.modules.map((m) => m.path)\n    );\n  }\n\n  // Bundle node modules.\n  if (verbose) {\n    showSpinner(ctx, \"Bundling modules for Node.js runtime...\");\n  }\n  const nodeResult = await bundle(\n    ctx,\n    baseDir,\n    entryPoints.node,\n    true,\n    \"node\",\n    path.join(\"_deps\", \"node\"),\n    projectConfig.node.externalPackages\n  );\n  if (verbose) {\n    logMessage(\n      ctx,\n      \"Node.js runtime modules: \",\n      nodeResult.modules.map((m) => m.path)\n    );\n    if (projectConfig.node.externalPackages.length > 0) {\n      logMessage(\n        ctx,\n        \"Node.js runtime external dependencies (to be installed on the server): \",\n        [...nodeResult.externalDependencies.entries()].map(\n          (a) => `${a[0]}: ${a[1]}`\n        )\n      );\n    }\n  }\n  const modules = convexResult.modules;\n  modules.push(...nodeResult.modules);\n  modules.push(...(await bundleAuthConfig(ctx, baseDir)));\n\n  const nodeDependencies: NodeDependency[] = [];\n  for (const [moduleName, moduleVersion] of nodeResult.externalDependencies) {\n    nodeDependencies.push({ name: moduleName, version: moduleVersion });\n  }\n\n  const bundledModuleInfos: BundledModuleInfo[] = Array.from(\n    convexResult.bundledModuleNames.keys()\n  ).map((moduleName) => {\n    return {\n      name: moduleName,\n      platform: \"convex\",\n    };\n  });\n  bundledModuleInfos.push(\n    ...Array.from(nodeResult.bundledModuleNames.keys()).map(\n      (moduleName): BundledModuleInfo => {\n        return {\n          name: moduleName,\n          platform: \"node\",\n        };\n      }\n    )\n  );\n\n  return {\n    config: {\n      projectConfig: projectConfig,\n      modules: modules,\n      nodeDependencies: nodeDependencies,\n      // We're just using the version this CLI is running with for now.\n      // This could be different than the version of `convex` the app runs with\n      // if the CLI is installed globally.\n      udfServerVersion: version,\n    },\n    bundledModuleInfos,\n  };\n}\n\n/**\n * Read the config from `convex.json` and bundle all the modules.\n */\nexport async function readConfig(\n  ctx: Context,\n  verbose: boolean\n): Promise<{\n  config: Config;\n  configPath: string;\n  bundledModuleInfos: BundledModuleInfo[];\n}> {\n  const { projectConfig, configPath } = await readProjectConfig(ctx);\n  const { config, bundledModuleInfos } = await configFromProjectConfig(\n    ctx,\n    projectConfig,\n    configPath,\n    verbose\n  );\n  return { config, configPath, bundledModuleInfos };\n}\n\nexport async function upgradeOldAuthInfoToAuthConfig(\n  ctx: Context,\n  config: ProjectConfig,\n  functionsPath: string\n) {\n  if (config.authInfo !== undefined) {\n    const authConfigPath = path.resolve(functionsPath, \"auth.config.js\");\n    const authConfigRelativePath = path.join(\n      config.functions,\n      \"auth.config.js\"\n    );\n    if (ctx.fs.exists(authConfigPath)) {\n      logFailure(\n        ctx,\n        `Cannot set auth config in both \\`${authConfigRelativePath}\\` and convex.json,` +\n          ` remove it from convex.json`\n      );\n      await ctx.crash(1, \"invalid filesystem data\");\n    }\n    if (config.authInfo.length > 0) {\n      const providersStringLines = JSON.stringify(\n        config.authInfo,\n        null,\n        2\n      ).split(EOL);\n      const indentedProvidersString = [providersStringLines[0]]\n        .concat(providersStringLines.slice(1).map((line) => `  ${line}`))\n        .join(EOL);\n      ctx.fs.writeUtf8File(\n        authConfigPath,\n        `\\\n  export default {\n    providers: ${indentedProvidersString},\n  };`\n      );\n      logMessage(\n        ctx,\n        chalk.yellowBright(\n          `Moved auth config from config.json to \\`${authConfigRelativePath}\\``\n        )\n      );\n    }\n    delete config.authInfo;\n  }\n  return config;\n}\n\n/** Write the config to `convex.json` in the current working directory. */\nexport async function writeProjectConfig(\n  ctx: Context,\n  projectConfig: ProjectConfig,\n  { deleteIfAllDefault }: { deleteIfAllDefault: boolean } = {\n    deleteIfAllDefault: false,\n  }\n) {\n  const configPath = await configFilepath(ctx);\n  const strippedConfig = filterWriteableConfig(stripDefaults(projectConfig));\n  if (Object.keys(strippedConfig).length > 0) {\n    try {\n      const contents = JSON.stringify(strippedConfig, undefined, 2) + \"\\n\";\n      ctx.fs.writeUtf8File(configPath, contents, 0o644);\n    } catch (err) {\n      logFailure(\n        ctx,\n        `Error: Unable to write project config file \"${configPath}\" in current directory\\n` +\n          \"  Are you running this command from the root directory of a Convex project?\"\n      );\n      return await ctx.crash(1, \"invalid filesystem data\", err);\n    }\n  } else if (deleteIfAllDefault && ctx.fs.exists(configPath)) {\n    ctx.fs.unlink(configPath);\n    logMessage(\n      ctx,\n      chalk.yellowBright(\n        `Deleted ${configPath} since it completely matched defaults`\n      )\n    );\n  }\n  ctx.fs.mkdir(functionsDir(configPath, projectConfig), {\n    allowExisting: true,\n  });\n}\n\nfunction stripDefaults(projectConfig: ProjectConfig): any {\n  const stripped: any = { ...projectConfig };\n  if (stripped.functions === DEFAULT_FUNCTIONS_PATH) {\n    delete stripped.functions;\n  }\n  if (Array.isArray(stripped.authInfo) && stripped.authInfo.length === 0) {\n    delete stripped.authInfo;\n  }\n  if (stripped.node.externalPackages.length === 0) {\n    delete stripped.node.externalPackages;\n  }\n  if (stripped.generateCommonJSApi === false) {\n    delete stripped.generateCommonJSApi;\n  }\n  // Remove \"node\" field if it has nothing nested under it\n  if (Object.keys(stripped.node).length === 0) {\n    delete stripped.node;\n  }\n  return stripped;\n}\n\nfunction filterWriteableConfig(projectConfig: any) {\n  const writeable: any = { ...projectConfig };\n  delete writeable.project;\n  delete writeable.team;\n  delete writeable.prodUrl;\n  return writeable;\n}\n\nexport function removedExistingConfig(\n  ctx: Context,\n  configPath: string,\n  options: { allowExistingConfig?: boolean }\n) {\n  if (!options.allowExistingConfig) {\n    return false;\n  }\n  ctx.fs.rm(configPath);\n  logFinishedStep(ctx, `Removed existing ${configPath}`);\n  return true;\n}\n\n/** Pull configuration from the given remote origin. */\nexport async function pullConfig(\n  ctx: Context,\n  project: string | undefined,\n  team: string | undefined,\n  origin: string,\n  adminKey: string\n): Promise<Config> {\n  const client = deploymentClient(origin);\n  try {\n    const res = await client.post(\n      \"/api/get_config\",\n      { version, adminKey },\n      {\n        maxContentLength: Infinity,\n        headers: {\n          \"Convex-Client\": `npm-cli-${version}`,\n        },\n      }\n    );\n    deprecationCheckWarning(ctx, res);\n    const backendConfig = parseBackendConfig(res.data.config);\n    const projectConfig = {\n      ...backendConfig,\n      // This field is not stored in the backend, which is ok since it is also\n      // not used to diff configs.\n      node: {\n        externalPackages: [],\n      },\n      // This field is not stored in the backend, it only affects the client.\n      generateCommonJSApi: false,\n      project,\n      team,\n      prodUrl: origin,\n    };\n    return {\n      projectConfig,\n      modules: res.data.modules,\n      // TODO(presley): Add this to diffConfig().\n      nodeDependencies: res.data.nodeDependencies,\n      udfServerVersion: res.data.udfServerVersion,\n    };\n  } catch (err) {\n    logFailure(ctx, `Error: Unable to pull deployment config from ${origin}`);\n    return await logAndHandleAxiosError(ctx, err);\n  }\n}\n\ninterface BundledModuleInfo {\n  name: string;\n  platform: \"node\" | \"convex\";\n}\n\nexport function configJSON(\n  config: Config,\n  adminKey: string,\n  schemaId?: string,\n  pushMetrics?: PushMetrics,\n  bundledModuleInfos?: BundledModuleInfo[]\n) {\n  // Override origin with the url\n  const projectConfig = {\n    projectSlug: config.projectConfig.project,\n    teamSlug: config.projectConfig.team,\n    functions: config.projectConfig.functions,\n    authInfo: config.projectConfig.authInfo,\n  };\n  return {\n    config: projectConfig,\n    modules: config.modules,\n    nodeDependencies: config.nodeDependencies,\n    udfServerVersion: config.udfServerVersion,\n    schemaId,\n    adminKey,\n    pushMetrics,\n    bundledModuleInfos,\n  };\n}\n\n// Time in seconds of various spans of time during a push.\nexport type PushMetrics = {\n  typecheck: number;\n  bundle: number;\n  schemaPush: number;\n  codePull: number;\n  totalBeforePush: number;\n};\n\n/** Push configuration to the given remote origin. */\nexport async function pushConfig(\n  ctx: Context,\n  config: Config,\n  adminKey: string,\n  url: string,\n  pushMetrics?: PushMetrics,\n  schemaId?: string,\n  bundledModuleInfos?: BundledModuleInfo[]\n): Promise<void> {\n  const serializedConfig = configJSON(\n    config,\n    adminKey,\n    schemaId,\n    pushMetrics,\n    bundledModuleInfos\n  );\n  const client = deploymentClient(url);\n  try {\n    if (config.nodeDependencies.length > 0) {\n      changeSpinner(\n        ctx,\n        \"Installing external packages and deploying source code...\"\n      );\n    } else {\n      changeSpinner(ctx, \"Analyzing and deploying source code...\");\n    }\n    await client.post(\"/api/push_config\", serializedConfig, {\n      maxContentLength: Infinity,\n      maxBodyLength: Infinity,\n      headers: {\n        \"Convex-Client\": `npm-cli-${version}`,\n      },\n    });\n  } catch (error) {\n    if (\n      (error as AxiosError<ErrorData>).response?.data?.code ===\n      \"AuthConfigMissingEnvironmentVariable\"\n    ) {\n      const errorMessage = (error as any).response.data.message;\n      (error as any).wasExpected = true;\n      // If `npx convex dev` is running using --url there might not be a configured deployment\n      const configuredDeployment = await getConfiguredDeployment(ctx);\n      if (configuredDeployment !== null) {\n        const [, variableName] =\n          errorMessage.match(/Environment variable (\\S+)/i) ?? [];\n        const dashboardUrl = await dashboardUrlForConfiguredDeployment(\n          ctx,\n          configuredDeployment\n        );\n        const variableQuery =\n          variableName !== undefined ? `?var=${variableName}` : \"\";\n        logFailure(\n          ctx,\n          `Go to ${dashboardUrl}/settings/environment-variables${variableQuery} to setup your environment variable.`\n        );\n      } else {\n        logFailure(ctx, `Fix your auth.config.js.`);\n      }\n      logError(ctx, chalk.red(errorMessage));\n      await ctx.crash(1, \"invalid filesystem or env vars\", error);\n    }\n\n    logFailure(ctx, \"Error: Unable to push deployment config to \" + url);\n    return await logAndHandleAxiosError(ctx, error);\n  }\n}\n\ntype Files = { source: string; filename: string }[];\n\nexport type CodegenResponse =\n  | {\n      success: true;\n      files: Files;\n    }\n  | {\n      success: false;\n      error: string;\n    };\n\nfunction renderModule(module: Bundle): string {\n  const sourceMapSize = formatSize(module.sourceMap?.length ?? 0);\n  return (\n    module.path +\n    ` (${formatSize(module.source.length)}, source map ${sourceMapSize})`\n  );\n}\n\nfunction compareModules(oldModules: Bundle[], newModules: Bundle[]): string {\n  let diff = \"\";\n\n  const droppedModules = [];\n  for (const oldModule of oldModules) {\n    let matches = false;\n    for (const newModule of newModules) {\n      if (\n        oldModule.path === newModule.path &&\n        oldModule.source === newModule.source &&\n        oldModule.sourceMap === newModule.sourceMap\n      ) {\n        matches = true;\n        break;\n      }\n    }\n    if (!matches) {\n      droppedModules.push(oldModule);\n    }\n  }\n  if (droppedModules.length > 0) {\n    diff += \"Delete the following modules:\\n\";\n    for (const module of droppedModules) {\n      diff += \"[-] \" + renderModule(module) + \"\\n\";\n    }\n  }\n\n  const addedModules = [];\n  for (const newModule of newModules) {\n    let matches = false;\n    for (const oldModule of oldModules) {\n      if (\n        oldModule.path === newModule.path &&\n        oldModule.source === newModule.source &&\n        oldModule.sourceMap === newModule.sourceMap\n      ) {\n        matches = true;\n        break;\n      }\n    }\n    if (!matches) {\n      addedModules.push(newModule);\n    }\n  }\n  if (addedModules.length > 0) {\n    diff += \"Add the following modules:\\n\";\n    for (const module of addedModules) {\n      diff += \"[+] \" + renderModule(module) + \"\\n\";\n    }\n  }\n\n  return diff;\n}\n\n/** Generate a human-readable diff between the two configs. */\nexport function diffConfig(oldConfig: Config, newConfig: Config): string {\n  let diff = compareModules(oldConfig.modules, newConfig.modules);\n\n  const droppedAuth = [];\n  if (\n    oldConfig.projectConfig.authInfo !== undefined &&\n    newConfig.projectConfig.authInfo !== undefined\n  ) {\n    for (const oldAuth of oldConfig.projectConfig.authInfo) {\n      let matches = false;\n      for (const newAuth of newConfig.projectConfig.authInfo) {\n        if (equal(oldAuth, newAuth)) {\n          matches = true;\n          break;\n        }\n      }\n      if (!matches) {\n        droppedAuth.push(oldAuth);\n      }\n    }\n    if (droppedAuth.length > 0) {\n      diff += \"Remove the following auth providers:\\n\";\n      for (const authInfo of droppedAuth) {\n        diff += \"[-] \" + JSON.stringify(authInfo) + \"\\n\";\n      }\n    }\n\n    const addedAuth = [];\n    for (const newAuth of newConfig.projectConfig.authInfo) {\n      let matches = false;\n      for (const oldAuth of oldConfig.projectConfig.authInfo) {\n        if (equal(newAuth, oldAuth)) {\n          matches = true;\n          break;\n        }\n      }\n      if (!matches) {\n        addedAuth.push(newAuth);\n      }\n    }\n    if (addedAuth.length > 0) {\n      diff += \"Add the following auth providers:\\n\";\n      for (const auth of addedAuth) {\n        diff += \"[+] \" + JSON.stringify(auth) + \"\\n\";\n      }\n    }\n  } else if (\n    (oldConfig.projectConfig.authInfo !== undefined) !==\n    (newConfig.projectConfig.authInfo !== undefined)\n  ) {\n    diff += \"Moved auth config into auth.config.js\\n\";\n  }\n\n  let versionMessage = \"\";\n  const matches = oldConfig.udfServerVersion === newConfig.udfServerVersion;\n  if (oldConfig.udfServerVersion && (!newConfig.udfServerVersion || !matches)) {\n    versionMessage += `[-] ${oldConfig.udfServerVersion}\\n`;\n  }\n  if (newConfig.udfServerVersion && (!oldConfig.udfServerVersion || !matches)) {\n    versionMessage += `[+] ${newConfig.udfServerVersion}\\n`;\n  }\n  if (versionMessage) {\n    diff += \"Change the server's function version:\\n\";\n    diff += versionMessage;\n  }\n\n  return diff;\n}\n"],
  "mappings": "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",
  "names": ["matches"]
}
