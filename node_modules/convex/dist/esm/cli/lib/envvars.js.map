{
  "version": 3,
  "sources": ["../../../../src/cli/lib/envvars.ts"],
  "sourcesContent": ["/**\n * Help the developer store the CONVEX_URL environment variable.\n */\nimport chalk from \"chalk\";\nimport * as dotenv from \"dotenv\";\n\nimport { Context, logWarning } from \"../../bundler/context.js\";\nimport { loadPackageJson } from \"./utils.js\";\n\nconst FRAMEWORKS = [\n  \"create-react-app\",\n  \"Next.js\",\n  \"Vite\",\n  \"Remix\",\n  \"SvelteKit\",\n] as const;\ntype Framework = (typeof FRAMEWORKS)[number];\n\ntype ConvexUrlWriteConfig = {\n  envFile: string;\n  envVar: string;\n  existingFileContent: string | null;\n} | null;\n\nexport async function writeConvexUrlToEnvFile(\n  ctx: Context,\n  value: string\n): Promise<ConvexUrlWriteConfig> {\n  const writeConfig = await envVarWriteConfig(ctx, value);\n\n  if (writeConfig === null) {\n    return null;\n  }\n\n  const { envFile, envVar, existingFileContent } = writeConfig;\n  const modified = changedEnvVarFile(existingFileContent, envVar, value)!;\n  ctx.fs.writeUtf8File(envFile, modified);\n  return writeConfig;\n}\n\nexport function changedEnvVarFile(\n  existingFileContent: string | null,\n  envVarName: string,\n  envVarValue: string,\n  commentAfterValue?: string,\n  commentOnPreviousLine?: string\n): string | null {\n  const varAssignment = `${envVarName}=${envVarValue}${\n    commentAfterValue === undefined ? \"\" : ` # ${commentAfterValue}`\n  }`;\n  const commentOnPreviousLineWithLineBreak =\n    commentOnPreviousLine === undefined ? \"\" : `${commentOnPreviousLine}\\n`;\n  if (existingFileContent === null) {\n    return `${commentOnPreviousLineWithLineBreak}${varAssignment}\\n`;\n  }\n  const config = dotenv.parse(existingFileContent);\n  const existing = config[envVarName];\n  if (existing === envVarValue) {\n    return null;\n  }\n  if (existing !== undefined) {\n    return existingFileContent.replace(\n      getEnvVarRegex(envVarName),\n      `${varAssignment}`\n    );\n  } else {\n    const doubleLineBreak = existingFileContent.endsWith(\"\\n\") ? \"\\n\" : \"\\n\\n\";\n    return (\n      existingFileContent +\n      doubleLineBreak +\n      commentOnPreviousLineWithLineBreak +\n      varAssignment +\n      \"\\n\"\n    );\n  }\n}\n\nexport function getEnvVarRegex(envVarName: string) {\n  return new RegExp(`^${envVarName}.*$`, \"m\");\n}\n\nexport async function suggestedEnvVarName(ctx: Context): Promise<{\n  detectedFramework?: Framework;\n  envVar: string;\n}> {\n  // no package.json, that's fine, just guess\n  if (!ctx.fs.exists(\"package.json\")) {\n    return {\n      envVar: \"CONVEX_URL\",\n    };\n  }\n\n  const packages = await loadPackageJson(ctx);\n\n  // Is it create-react-app?\n  const isCreateReactApp = \"react-scripts\" in packages;\n  if (isCreateReactApp) {\n    return {\n      detectedFramework: \"create-react-app\",\n      envVar: \"REACT_APP_CONVEX_URL\",\n    };\n  }\n\n  const isNextJs = \"next\" in packages;\n  if (isNextJs) {\n    return {\n      detectedFramework: \"Next.js\",\n      envVar: \"NEXT_PUBLIC_CONVEX_URL\",\n    };\n  }\n\n  const isRemix = \"@remix-run/dev\" in packages;\n  if (isRemix) {\n    return {\n      detectedFramework: \"Remix\",\n      envVar: \"CONVEX_URL\",\n    };\n  }\n\n  const isSvelteKit = \"@sveltejs/kit\" in packages;\n  if (isSvelteKit) {\n    return {\n      detectedFramework: \"SvelteKit\",\n      envVar: \"PUBLIC_CONVEX_URL\",\n    };\n  }\n\n  // Vite is a dependency of a lot of things; vite appearing in dependencies is not a strong indicator.\n  const isVite = \"vite\" in packages;\n\n  if (isVite) {\n    return {\n      detectedFramework: \"Vite\",\n      envVar: \"VITE_CONVEX_URL\",\n    };\n  }\n\n  return {\n    envVar: \"CONVEX_URL\",\n  };\n}\n\nasync function envVarWriteConfig(\n  ctx: Context,\n  value: string | null\n): Promise<ConvexUrlWriteConfig> {\n  const { detectedFramework, envVar } = await suggestedEnvVarName(ctx);\n\n  const { envFile, existing } = suggestedDevEnvFile(ctx, detectedFramework);\n\n  if (!existing) {\n    return { envFile, envVar, existingFileContent: null };\n  }\n\n  const existingFileContent = ctx.fs.readUtf8File(envFile);\n  const config = dotenv.parse(existingFileContent);\n\n  const matching = Object.keys(config).filter((key) => EXPECTED_NAMES.has(key));\n  if (matching.length > 1) {\n    logWarning(\n      ctx,\n      chalk.yellow(\n        `Found multiple CONVEX_URL environment variables in ${envFile} so cannot update automatically.`\n      )\n    );\n    return null;\n  }\n  if (matching.length === 1) {\n    const [existingEnvVar, oldValue] = [matching[0], config[matching[0]]];\n    if (oldValue === value) {\n      return null;\n    }\n    if (Object.values(config).filter((v) => v === oldValue).length !== 1) {\n      chalk.yellow(`Can't safely modify ${envFile}, please edit manually.`);\n      return null;\n    }\n    return { envFile, envVar: existingEnvVar, existingFileContent };\n  }\n  return { envFile, envVar, existingFileContent };\n}\n\nfunction suggestedDevEnvFile(\n  ctx: Context,\n  framework?: Framework\n): {\n  existing: boolean;\n  envFile: string;\n} {\n  // If a .env.local file exists, that's unequivocally the right file\n  if (ctx.fs.exists(\".env.local\")) {\n    return {\n      existing: true,\n      envFile: \".env.local\",\n    };\n  }\n\n  // Remix is on team \"don't commit the .env file,\" so .env is for dev.\n  if (framework === \"Remix\") {\n    return {\n      existing: ctx.fs.exists(\".env\"),\n      envFile: \".env\",\n    };\n  }\n\n  // The most dev-looking env file that exists, or .env.local\n  return {\n    existing: ctx.fs.exists(\".env.local\"),\n    envFile: \".env.local\",\n  };\n}\n\nconst EXPECTED_NAMES = new Set([\n  \"CONVEX_URL\",\n  \"PUBLIC_CONVEX_URL\",\n  \"NEXT_PUBLIC_CONVEX_URL\",\n  \"VITE_CONVEX_URL\",\n  \"REACT_APP_CONVEX_URL\",\n]);\n\nexport function buildEnvironment(): string | boolean {\n  return process.env.VERCEL\n    ? \"Vercel\"\n    : process.env.NETLIFY\n    ? \"Netlify\"\n    : false;\n}\n\nexport function gitBranchFromEnvironment(): string | null {\n  if (process.env.VERCEL) {\n    // https://vercel.com/docs/projects/environment-variables/system-environment-variables\n    return process.env.VERCEL_GIT_COMMIT_REF ?? null;\n  }\n  if (process.env.NETLIFY) {\n    // https://docs.netlify.com/configure-builds/environment-variables/\n    return process.env.HEAD ?? null;\n  }\n\n  if (process.env.CI) {\n    // https://docs.github.com/en/actions/learn-github-actions/variables\n    // https://docs.gitlab.com/ee/ci/variables/predefined_variables.html\n    return (\n      process.env.GITHUB_HEAD_REF ?? process.env.CI_COMMIT_REF_NAME ?? null\n    );\n  }\n\n  return null;\n}\n\nexport function isNonProdBuildEnvironment(): boolean {\n  if (process.env.VERCEL) {\n    // https://vercel.com/docs/projects/environment-variables/system-environment-variables\n    return process.env.VERCEL_ENV !== \"production\";\n  }\n  if (process.env.NETLIFY) {\n    // https://docs.netlify.com/configure-builds/environment-variables/\n    return process.env.CONTEXT !== \"production\";\n  }\n  return false;\n}\n"],
  "mappings": "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",
  "names": []
}
