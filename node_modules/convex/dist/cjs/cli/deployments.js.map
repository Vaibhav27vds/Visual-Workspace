{
  "version": 3,
  "sources": ["../../../src/cli/deployments.ts"],
  "sourcesContent": ["import { Command } from \"commander\";\nimport { readProjectConfig } from \"./lib/config.js\";\nimport chalk from \"chalk\";\nimport { bigBrainAPI } from \"./lib/utils.js\";\nimport { logError, logMessage, oneoffContext } from \"../bundler/context.js\";\n\ntype Deployment = {\n  id: number;\n  name: string;\n  create_time: number;\n  deployment_type: \"dev\" | \"prod\";\n};\n\nexport const deployments = new Command(\"deployments\")\n  .description(\"List deployments associated with a project\")\n  .action(async () => {\n    const ctx = oneoffContext;\n    const { projectConfig: config } = await readProjectConfig(ctx);\n\n    const url = `/teams/${config.team}/projects/${config.project}/deployments`;\n\n    logMessage(ctx, `Deployments for project ${config.team}/${config.project}`);\n    const deployments = (await bigBrainAPI({\n      ctx,\n      method: \"GET\",\n      url,\n    })) as Deployment[];\n    console.log(deployments);\n    if (deployments.length === 0) {\n      logError(ctx, chalk.yellow(`No deployments exist for project`));\n    }\n  });\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAwB;AACxB,oBAAkC;AAClC,mBAAkB;AAClB,mBAA4B;AAC5B,qBAAoD;AAS7C,MAAM,cAAc,IAAI,yBAAQ,aAAa,EACjD,YAAY,4CAA4C,EACxD,OAAO,YAAY;AAClB,QAAM,MAAM;AACZ,QAAM,EAAE,eAAe,OAAO,IAAI,UAAM,iCAAkB,GAAG;AAE7D,QAAM,MAAM,UAAU,OAAO,iBAAiB,OAAO;AAErD,iCAAW,KAAK,2BAA2B,OAAO,QAAQ,OAAO,SAAS;AAC1E,QAAMA,eAAe,UAAM,0BAAY;AAAA,IACrC;AAAA,IACA,QAAQ;AAAA,IACR;AAAA,EACF,CAAC;AACD,UAAQ,IAAIA,YAAW;AACvB,MAAIA,aAAY,WAAW,GAAG;AAC5B,iCAAS,KAAK,aAAAC,QAAM,OAAO,kCAAkC,CAAC;AAAA,EAChE;AACF,CAAC;",
  "names": ["deployments", "chalk"]
}
