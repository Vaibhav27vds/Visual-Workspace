{
  "version": 3,
  "sources": ["../../../src/cli/login.ts"],
  "sourcesContent": ["import { Command, Option } from \"commander\";\nimport { logFinishedStep, oneoffContext } from \"../bundler/context.js\";\nimport { checkAuthorization, performLogin } from \"./lib/login.js\";\n\nexport const login = new Command(\"login\")\n  .description(\"Login to Convex\")\n  .option(\n    \"--device-name <name>\",\n    \"Provide a name for the device being authorized\"\n  )\n  .option(\n    \"-f, --force\",\n    \"Proceed with login even if a valid access token already exists for this device\"\n  )\n  .option(\n    \"--no-open\",\n    \"Don't automatically open the login link in the default browser\"\n  )\n  // These options are hidden from the help/usage message, but allow overriding settings for testing.\n  // Change the auth credentials with the auth provider\n  .addOption(new Option(\"--override-auth-url <url>\").hideHelp())\n  .addOption(new Option(\"--override-auth-client <id>\").hideHelp())\n  .addOption(new Option(\"--override-auth-username <username>\").hideHelp())\n  .addOption(new Option(\"--override-auth-password <password>\").hideHelp())\n  // Skip the auth provider login and directly use this access token\n  .addOption(new Option(\"--override-access-token <token>\").hideHelp())\n  // Automatically accept opt ins without prompting\n  .addOption(new Option(\"--accept-opt-ins\").hideHelp())\n  // Dump the access token from the auth provider and skip authorization with Convex\n  .addOption(new Option(\"--dump-access-token\").hideHelp())\n  .action(async (options, cmd: Command) => {\n    const ctx = oneoffContext;\n    if (\n      !options.force &&\n      (await checkAuthorization(ctx, options.acceptOptIns))\n    ) {\n      logFinishedStep(\n        ctx,\n        \"This device has previously been authorized and is ready for use with Convex.\"\n      );\n      return;\n    }\n    if (!!options.overrideAuthUsername !== !!options.overrideAuthPassword) {\n      cmd.error(\n        \"If overriding credentials, both username and password must be provided\"\n      );\n    }\n\n    await performLogin(ctx, options);\n  });\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAgC;AAChC,qBAA+C;AAC/C,mBAAiD;AAE1C,MAAM,QAAQ,IAAI,yBAAQ,OAAO,EACrC,YAAY,iBAAiB,EAC7B;AAAA,EACC;AAAA,EACA;AACF,EACC;AAAA,EACC;AAAA,EACA;AACF,EACC;AAAA,EACC;AAAA,EACA;AACF,EAGC,UAAU,IAAI,wBAAO,2BAA2B,EAAE,SAAS,CAAC,EAC5D,UAAU,IAAI,wBAAO,6BAA6B,EAAE,SAAS,CAAC,EAC9D,UAAU,IAAI,wBAAO,qCAAqC,EAAE,SAAS,CAAC,EACtE,UAAU,IAAI,wBAAO,qCAAqC,EAAE,SAAS,CAAC,EAEtE,UAAU,IAAI,wBAAO,iCAAiC,EAAE,SAAS,CAAC,EAElE,UAAU,IAAI,wBAAO,kBAAkB,EAAE,SAAS,CAAC,EAEnD,UAAU,IAAI,wBAAO,qBAAqB,EAAE,SAAS,CAAC,EACtD,OAAO,OAAO,SAAS,QAAiB;AACvC,QAAM,MAAM;AACZ,MACE,CAAC,QAAQ,SACR,UAAM,iCAAmB,KAAK,QAAQ,YAAY,GACnD;AACA;AAAA,MACE;AAAA,MACA;AAAA,IACF;AACA;AAAA,EACF;AACA,MAAI,CAAC,CAAC,QAAQ,yBAAyB,CAAC,CAAC,QAAQ,sBAAsB;AACrE,QAAI;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAEA,YAAM,2BAAa,KAAK,OAAO;AACjC,CAAC;",
  "names": []
}
