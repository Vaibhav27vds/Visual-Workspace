{
  "version": 3,
  "sources": ["../../../src/cli/index.ts"],
  "sourcesContent": ["#!/usr/bin/env node\n/* eslint-disable no-restricted-syntax */\nimport { Command } from \"commander\";\nimport { init } from \"./init.js\";\nimport { dashboard } from \"./dashboard.js\";\nimport { deployments } from \"./deployments.js\";\nimport { docs } from \"./docs.js\";\nimport { run } from \"./run.js\";\nimport { version } from \"./version.js\";\nimport { auth } from \"./auth.js\";\nimport { codegen } from \"./codegen.js\";\nimport { reinit } from \"./reinit.js\";\nimport { update } from \"./update.js\";\nimport { typecheck } from \"./typecheck.js\";\nimport { login } from \"./login.js\";\nimport { logout } from \"./logout.js\";\nimport chalk from \"chalk\";\nimport * as Sentry from \"@sentry/node\";\nimport \"@sentry/tracing\";\nimport stripAnsi from \"strip-ansi\";\nimport { productionProvisionHost, provisionHost } from \"./lib/config.js\";\nimport { convexImport } from \"./convexImport.js\";\nimport { dev } from \"./dev.js\";\nimport { deploy } from \"./deploy.js\";\nimport { logs } from \"./logs.js\";\n\nconst MINIMUM_MAJOR_VERSION = 16;\nconst MINIMUM_MINOR_VERSION = 15;\n\nasync function main() {\n  // If you want to use `@sentry/tracing` in your project directly, use a named import instead:\n  // import * as SentryTracing from \"@sentry/tracing\"\n  // Unused named imports are not guaranteed to patch the global hub.\n\n  if (!process.env.CI && provisionHost === productionProvisionHost) {\n    Sentry.init({\n      dsn: \"https://f9fa0306e3d540079cf40ce8c2ad9644@o1192621.ingest.sentry.io/6390839\",\n      release: \"cli@\" + version,\n      tracesSampleRate: 0.2,\n      beforeBreadcrumb: (breadcrumb) => {\n        // Strip ANSI color codes from log lines that are sent as breadcrumbs.\n        if (breadcrumb.message) {\n          breadcrumb.message = stripAnsi(breadcrumb.message);\n        }\n        return breadcrumb;\n      },\n    });\n  }\n\n  const nodeVersion = process.versions.node;\n  const majorVersion = parseInt(nodeVersion.split(\".\")[0], 10);\n  const minorVersion = parseInt(nodeVersion.split(\".\")[1], 10);\n  if (\n    majorVersion < MINIMUM_MAJOR_VERSION ||\n    (majorVersion === MINIMUM_MAJOR_VERSION &&\n      minorVersion < MINIMUM_MINOR_VERSION)\n  ) {\n    console.error(\n      chalk.red(\n        `Your Node version ${nodeVersion} is too old. Convex requires at least Node v${MINIMUM_MAJOR_VERSION}.${MINIMUM_MINOR_VERSION}`\n      )\n    );\n    console.error(\n      chalk.gray(\n        `You can use ${chalk.bold(\n          \"nvm\"\n        )} (https://github.com/nvm-sh/nvm#installing-and-updating) to manage different versions of Node.`\n      )\n    );\n    console.error(\n      chalk.gray(\n        \"After installing `nvm`, install the latest version of Node with \" +\n          chalk.bold(\"`nvm install node`.\")\n      )\n    );\n    console.error(\n      chalk.gray(\n        \"Then, activate the installed version in your terminal with \" +\n          chalk.bold(\"`nvm use`.\")\n      )\n    );\n    process.exit(1);\n  }\n\n  const program = new Command();\n  program\n    .name(\"convex\")\n    .usage(\"<command> [options]\")\n    .addCommand(login, { hidden: true })\n    .addCommand(init, { hidden: true })\n    .addCommand(reinit, { hidden: true })\n    .addCommand(dev)\n    .addCommand(deploy)\n    .addCommand(deployments, { hidden: true })\n    .addCommand(run)\n    .addCommand(typecheck, { hidden: true })\n    .addCommand(auth, { hidden: true })\n    .addCommand(convexImport)\n    .addCommand(codegen)\n    .addCommand(dashboard)\n    .addCommand(docs)\n    .addCommand(update)\n    .addCommand(logs)\n    .addCommand(logout)\n    .addHelpCommand(\"help <command>\", \"Show help for given <command>\")\n    .version(version)\n    // Hide version and help so they don't clutter\n    // the list of commands.\n    .configureHelp({ visibleOptions: () => [] })\n    .showHelpAfterError();\n\n  // Run the command and be sure to flush Sentry before exiting.\n  try {\n    await program.parseAsync(process.argv);\n  } catch (e) {\n    Sentry.captureException(e);\n    process.exitCode = 1;\n    console.error(chalk.red(\"Unexpected Error: \" + e));\n  } finally {\n    await Sentry.close();\n  }\n  process.exit();\n}\nvoid main();\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAEA,uBAAwB;AACxB,kBAAqB;AACrB,uBAA0B;AAC1B,yBAA4B;AAC5B,kBAAqB;AACrB,iBAAoB;AACpB,qBAAwB;AACxB,kBAAqB;AACrB,qBAAwB;AACxB,oBAAuB;AACvB,oBAAuB;AACvB,uBAA0B;AAC1B,mBAAsB;AACtB,oBAAuB;AACvB,mBAAkB;AAClB,aAAwB;AACxB,qBAAO;AACP,wBAAsB;AACtB,oBAAuD;AACvD,0BAA6B;AAC7B,iBAAoB;AACpB,oBAAuB;AACvB,kBAAqB;AAErB,MAAM,wBAAwB;AAC9B,MAAM,wBAAwB;AAE9B,eAAe,OAAO;AAKpB,MAAI,CAAC,QAAQ,IAAI,MAAM,gCAAkB,uCAAyB;AAChE,WAAO,KAAK;AAAA,MACV,KAAK;AAAA,MACL,SAAS,SAAS;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB,CAAC,eAAe;AAEhC,YAAI,WAAW,SAAS;AACtB,qBAAW,cAAU,kBAAAA,SAAU,WAAW,OAAO;AAAA,QACnD;AACA,eAAO;AAAA,MACT;AAAA,IACF,CAAC;AAAA,EACH;AAEA,QAAM,cAAc,QAAQ,SAAS;AACrC,QAAM,eAAe,SAAS,YAAY,MAAM,GAAG,EAAE,CAAC,GAAG,EAAE;AAC3D,QAAM,eAAe,SAAS,YAAY,MAAM,GAAG,EAAE,CAAC,GAAG,EAAE;AAC3D,MACE,eAAe,yBACd,iBAAiB,yBAChB,eAAe,uBACjB;AACA,YAAQ;AAAA,MACN,aAAAC,QAAM;AAAA,QACJ,qBAAqB,0DAA0D,yBAAyB;AAAA,MAC1G;AAAA,IACF;AACA,YAAQ;AAAA,MACN,aAAAA,QAAM;AAAA,QACJ,eAAe,aAAAA,QAAM;AAAA,UACnB;AAAA,QACF;AAAA,MACF;AAAA,IACF;AACA,YAAQ;AAAA,MACN,aAAAA,QAAM;AAAA,QACJ,qEACE,aAAAA,QAAM,KAAK,qBAAqB;AAAA,MACpC;AAAA,IACF;AACA,YAAQ;AAAA,MACN,aAAAA,QAAM;AAAA,QACJ,gEACE,aAAAA,QAAM,KAAK,YAAY;AAAA,MAC3B;AAAA,IACF;AACA,YAAQ,KAAK,CAAC;AAAA,EAChB;AAEA,QAAM,UAAU,IAAI,yBAAQ;AAC5B,UACG,KAAK,QAAQ,EACb,MAAM,qBAAqB,EAC3B,WAAW,oBAAO,EAAE,QAAQ,KAAK,CAAC,EAClC,WAAW,kBAAM,EAAE,QAAQ,KAAK,CAAC,EACjC,WAAW,sBAAQ,EAAE,QAAQ,KAAK,CAAC,EACnC,WAAW,cAAG,EACd,WAAW,oBAAM,EACjB,WAAW,gCAAa,EAAE,QAAQ,KAAK,CAAC,EACxC,WAAW,cAAG,EACd,WAAW,4BAAW,EAAE,QAAQ,KAAK,CAAC,EACtC,WAAW,kBAAM,EAAE,QAAQ,KAAK,CAAC,EACjC,WAAW,gCAAY,EACvB,WAAW,sBAAO,EAClB,WAAW,0BAAS,EACpB,WAAW,gBAAI,EACf,WAAW,oBAAM,EACjB,WAAW,gBAAI,EACf,WAAW,oBAAM,EACjB,eAAe,kBAAkB,+BAA+B,EAChE,QAAQ,sBAAO,EAGf,cAAc,EAAE,gBAAgB,MAAM,CAAC,EAAE,CAAC,EAC1C,mBAAmB;AAGtB,MAAI;AACF,UAAM,QAAQ,WAAW,QAAQ,IAAI;AAAA,EACvC,SAAS,GAAP;AACA,WAAO,iBAAiB,CAAC;AACzB,YAAQ,WAAW;AACnB,YAAQ,MAAM,aAAAA,QAAM,IAAI,uBAAuB,CAAC,CAAC;AAAA,EACnD,UAAE;AACA,UAAM,OAAO,MAAM;AAAA,EACrB;AACA,UAAQ,KAAK;AACf;AACA,KAAK,KAAK;",
  "names": ["stripAnsi", "chalk"]
}
