{
  "version": 3,
  "sources": ["../../../src/cli/run.ts"],
  "sourcesContent": ["import { Command, Option } from \"commander\";\nimport { logFailure, oneoffContext } from \"../bundler/context.js\";\nimport { watchAndPush } from \"./dev.js\";\nimport { fetchDeploymentCredentialsProvisionProd } from \"./lib/api.js\";\nimport { runFunctionAndLog, subscribeAndLog } from \"./lib/run.js\";\nimport { ensureHasConvexDependency } from \"./lib/utils.js\";\n\nexport const run = new Command(\"run\")\n  .description(\n    \"Run a Convex function (query, mutation, or action) after pushing local code.\"\n  )\n  .argument(\n    \"functionName\",\n    \"identifier of the function to run, like `listMessages` or `dir/file:myFunction`\"\n  )\n  .argument(\n    \"[args]\",\n    \"JSON-formatted arguments object to pass to the function.\"\n  )\n  .option(\n    \"-w, --watch\",\n    \"Watch a query, printing its result if the underlying data changes. Given function must be a query.\"\n  )\n  .option(\"--push\", \"Push code to deployment before running the function.\")\n  // For backwards compatibility we still support --no-push which is a noop\n  .addOption(new Option(\"--no-push\").hideHelp())\n  .option(\n    \"--prod\",\n    \"Run the function on this project's production deployment, instead of the configured deployment. Can only be used with --no-push.\"\n  )\n  .addOption(new Option(\"--url <url>\").hideHelp())\n  .addOption(new Option(\"--admin-key <adminKey>\").hideHelp())\n\n  // Options for the implicit dev deploy\n  .addOption(\n    new Option(\n      \"--typecheck <mode>\",\n      `Whether to check TypeScript files with \\`tsc --noEmit\\`.`\n    )\n      .choices([\"enable\", \"try\", \"disable\"])\n      .default(\"try\")\n  )\n  .addOption(\n    new Option(\"--codegen <mode>\", \"Regenerate code in `convex/_generated/`\")\n      .choices([\"enable\", \"disable\"])\n      .default(\"enable\")\n  )\n\n  .showHelpAfterError()\n  .action(async (functionName, argsString, options) => {\n    const ctx = oneoffContext;\n\n    const { adminKey, url: deploymentUrl } =\n      await fetchDeploymentCredentialsProvisionProd(ctx, options);\n\n    await ensureHasConvexDependency(ctx, \"run\");\n\n    const args = argsString ? JSON.parse(argsString) : {};\n\n    if (options.prod && options.push) {\n      logFailure(\n        ctx,\n        `\\`convex run\\` doesn't support pushing functions to prod deployments. ` +\n          `Remove the --push flag. To push to production use \\`npx convex deploy\\`.`\n      );\n      return await ctx.crash(1, \"fatal\");\n    }\n\n    if (options.push) {\n      await watchAndPush(\n        ctx,\n        {\n          adminKey,\n          verbose: !!options.verbose,\n          dryRun: false,\n          typecheck: options.typecheck,\n          debug: false,\n          codegen: options.codegen === \"enable\",\n          url: deploymentUrl,\n        },\n        {\n          once: true,\n          traceEvents: false,\n          untilSuccess: true,\n        }\n      );\n    }\n\n    if (options.watch) {\n      return await subscribeAndLog(\n        ctx,\n        deploymentUrl,\n        adminKey,\n        functionName,\n        args\n      );\n    }\n    return await runFunctionAndLog(\n      ctx,\n      deploymentUrl,\n      adminKey,\n      functionName,\n      args\n    );\n  });\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAgC;AAChC,qBAA0C;AAC1C,iBAA6B;AAC7B,iBAAwD;AACxD,iBAAmD;AACnD,mBAA0C;AAEnC,MAAM,MAAM,IAAI,yBAAQ,KAAK,EACjC;AAAA,EACC;AACF,EACC;AAAA,EACC;AAAA,EACA;AACF,EACC;AAAA,EACC;AAAA,EACA;AACF,EACC;AAAA,EACC;AAAA,EACA;AACF,EACC,OAAO,UAAU,sDAAsD,EAEvE,UAAU,IAAI,wBAAO,WAAW,EAAE,SAAS,CAAC,EAC5C;AAAA,EACC;AAAA,EACA;AACF,EACC,UAAU,IAAI,wBAAO,aAAa,EAAE,SAAS,CAAC,EAC9C,UAAU,IAAI,wBAAO,wBAAwB,EAAE,SAAS,CAAC,EAGzD;AAAA,EACC,IAAI;AAAA,IACF;AAAA,IACA;AAAA,EACF,EACG,QAAQ,CAAC,UAAU,OAAO,SAAS,CAAC,EACpC,QAAQ,KAAK;AAClB,EACC;AAAA,EACC,IAAI,wBAAO,oBAAoB,yCAAyC,EACrE,QAAQ,CAAC,UAAU,SAAS,CAAC,EAC7B,QAAQ,QAAQ;AACrB,EAEC,mBAAmB,EACnB,OAAO,OAAO,cAAc,YAAY,YAAY;AACnD,QAAM,MAAM;AAEZ,QAAM,EAAE,UAAU,KAAK,cAAc,IACnC,UAAM,oDAAwC,KAAK,OAAO;AAE5D,YAAM,wCAA0B,KAAK,KAAK;AAE1C,QAAM,OAAO,aAAa,KAAK,MAAM,UAAU,IAAI,CAAC;AAEpD,MAAI,QAAQ,QAAQ,QAAQ,MAAM;AAChC;AAAA,MACE;AAAA,MACA;AAAA,IAEF;AACA,WAAO,MAAM,IAAI,MAAM,GAAG,OAAO;AAAA,EACnC;AAEA,MAAI,QAAQ,MAAM;AAChB,cAAM;AAAA,MACJ;AAAA,MACA;AAAA,QACE;AAAA,QACA,SAAS,CAAC,CAAC,QAAQ;AAAA,QACnB,QAAQ;AAAA,QACR,WAAW,QAAQ;AAAA,QACnB,OAAO;AAAA,QACP,SAAS,QAAQ,YAAY;AAAA,QAC7B,KAAK;AAAA,MACP;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,aAAa;AAAA,QACb,cAAc;AAAA,MAChB;AAAA,IACF;AAAA,EACF;AAEA,MAAI,QAAQ,OAAO;AACjB,WAAO,UAAM;AAAA,MACX;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,EACF;AACA,SAAO,UAAM;AAAA,IACX;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACF,CAAC;",
  "names": []
}
